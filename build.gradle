plugins {
    id "java-library"
    id "io.qameta.allure" version "2.9.6"
}

group 'org.example'
version '1.0-SNAPSHOT'


allure {
    report {
        version.set("2.14.0")
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.14.0")
            }
        }
    }
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
           "org.junit.jupiter:junit-jupiter-api:5.8.1",
            "org.aeonbits.owner:owner:1.0.12")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
    implementation 'com.codeborne:selenide:5.24.2'
//    implementation 'com.codeborne:selenide:6.0.3'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'io.qameta.allure:allure-selenide:2.14.0'


}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
//    systemProperty("environment", System.getProperty("environment", "stage")) // preprod, prod

    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_tests(type: Test) {
    systemProperty("browserSize", System.getProperty("browserSize", "400x400"))
    useJUnitPlatform {
        includeTags "properties"
    }
}

task many_tags_tests(type: Test) {
    useJUnitPlatform {
        includeTags "properties"
        includeTags "smoke"
        excludeTags "prod"
    }
}
